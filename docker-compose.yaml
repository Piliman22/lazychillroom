services:
  backend:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: lazy-backend
    env_file:
      - .env
    expose:
      - "3000"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=lazychill
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    command: >
      sh -c "node migrations/initPostgreSQL.js && node server.js"

  db:
    image: postgres:16
    container_name: lazy-postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: lazychill
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    container_name: lazy-redis

  caddy:
    image: caddy:2
    container_name: lazy-caddy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./frontend:/srv
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
      - ${CERT_PATH}:/etc/ssl/certs/fullchain.pem:ro
      - ${KEY_PATH}:/etc/ssl/private/privkey.pem:ro
    environment:
      - DOMAIN=${DOMAIN}
    depends_on:
      - backend

volumes:
  db-data:
  caddy_data:
  caddy_config:
